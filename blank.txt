# docker-compose.yml

version: "3"

services:
  nginx:
    container_name: nginx
    build:
      context: ./requirements/nginx
    ports:
      - 443:443
    volumes:
      - wordpress_data:/var/www/html
    restart: always
    networks:
      - network

  wordpress:
    container_name: wordpress
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    ports:
      - 9000:9000
    restart: always
    env_file:
      - .env
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - network

volumes:
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      device: /home/jbrown/data/wordpress
      o: bind

networks:
  network:
    driver: bridge

# Dockerfile wordpress

FROM debian:buster

RUN apt-get update && apt-get install -y \
    wget \
    unzip \
    php-fpm \
    php-mysql \
    php-curl \
    php-gd \
    php-xml \
    php-mbstring \
    php-imagick

RUN mkdir /run/php/

WORKDIR /var/www/html
RUN wget -O wordpress.zip https://wordpress.org/latest.zip \
    && unzip wordpress.zip \
	&& cp -rf wordpress/* . \
    && rm -rf wordpress/ wordpress.zip 

RUN chown -R www-data:www-data . \
    && find . -type d -exec chmod 755 {} \; \
    && find . -type f -exec chmod 644 {} \;

EXPOSE 9000
CMD ["/usr/sbin/php-fpm7.3", "-F"]

# Dockerfile nginx

FROM	debian:buster

RUN		apt-get update
RUN		apt-get install -y nginx \
                openssl

RUN mkdir /etc/nginx/ssl
RUN openssl req -newkey rsa:4096 -x509 -sha256 -days 365 -nodes \
       -out /etc/nginx/ssl/jbrown.crt \
       -keyout /etc/nginx/ssl/jbrown.key \
       -subj "/C=FR/ST=Paris/L=Paris/O=42 School/OU=jbrown/CN=jbrown/"

COPY ./conf/nginx.conf /etc/nginx/conf.d

RUN mkdir -p /run/nginx

EXPOSE	443

CMD ["nginx", "-g", "daemon off;"]

# nginx.conf

server {
	listen 443 ssl;
	listen [::]:443 ssl;

	server_name jbrown.42.fr;

	ssl_certificate		/etc/nginx/ssl/jbrown.crt;
	ssl_certificate_key	/etc/nginx/ssl/jbrown.key;

	ssl_protocols		TLSv1.2 TLSv1.3;

	access_log /var/log/nginx/jbrown.access.log;
	error_log /var/log/nginx/jbrown.error.log;

	root /var/www/html;
	index index.php;

	location / {
		try_files $uri $uri/ /index.php$is_args$args;
	}

	location ~ \.php$ {
		include fastcgi_params; # /ect/nginx/fastcgi_params
		fastcgi_intercept_errors on;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass wordpress:9000;
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param SCRIPT_NAME $fastcgi_script_name;
	}
}
